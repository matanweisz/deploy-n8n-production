---
services:
  # Postgres Database For N8N Persistent Data
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - n8n_network
    expose:
      - "5432" # Only accessible within the Docker network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  n8n:
    image: n8nio/n8n:1.110.1
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Core Configuration
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_SCHEMA=public
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}

      # Redis Queue Configuration
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0

      # Production Configuration
      - N8N_HOST=0.0.0.0
      - N8N_PROTOCOL=http
      - N8N_PORT=5678
      - WEBHOOK_URL=https://${N8N_DOMAIN}
      - N8N_EDITOR_BASE_URL=https://${N8N_DOMAIN}
      - NODE_ENV=production

      # Security Configuration
      - N8N_SECURE_COOKIE=false
      - WEBHOOK_TUNNEL_URL= # Disable built-in tunnel service in production

      # Execution Data Configuration
      - EXECUTIONS_DATA_PRUNE=true # Enable execution data pruning
      - EXECUTIONS_DATA_MAX_AGE=336 # Keep executions for 14 days

      - QUEUE_HEALTH_CHECK_ACTIVE=true

      # Timezone Configuration
      - TZ=Asia/Jerusalem
    volumes:
      - ./data/n8n:/home/node/.n8n # N8N Temporary Files
    networks:
      - n8n_network
    ports:
      - "5678:5678"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5678/healthz",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  n8n_network:
    driver: bridge
